// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using Forms.Http.Models;

namespace Forms.Http.Models
{
    public partial class Employee

    {
        public override string ToString()
        {
            return FirstName+" "+LastName+"\n"+"Ilość klientów: "+Customers.Count;
        }
        private IList<Customer> _customers;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Customer> Customers
        {
            get { return this._customers; }
            set { this._customers = value; }
        }
        
        private string _firstName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string FirstName
        {
            get { return this._firstName; }
            set { this._firstName = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _lastName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string LastName
        {
            get { return this._lastName; }
            set { this._lastName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Employee class.
        /// </summary>
        public Employee()
        {
            this.Customers = new LazyList<Customer>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken customersSequence = ((JToken)inputObject["Customers"]);
                if (customersSequence != null && customersSequence.Type != JTokenType.Null)
                {
                    foreach (JToken customersValue in ((JArray)customersSequence))
                    {
                        Customer customer = new Customer();
                        customer.DeserializeJson(customersValue);
                        this.Customers.Add(customer);
                    }
                }
                JToken firstNameValue = inputObject["FirstName"];
                if (firstNameValue != null && firstNameValue.Type != JTokenType.Null)
                {
                    this.FirstName = ((string)firstNameValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken lastNameValue = inputObject["LastName"];
                if (lastNameValue != null && lastNameValue.Type != JTokenType.Null)
                {
                    this.LastName = ((string)lastNameValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Employee
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            JArray customersSequence = null;
            if (this.Customers != null)
            {
                if (this.Customers is ILazyCollection<Customer> == false || ((ILazyCollection<Customer>)this.Customers).IsInitialized)
                {
                    customersSequence = new JArray();
                    outputObject["Customers"] = customersSequence;
                    foreach (Customer customersItem in this.Customers)
                    {
                        if (customersItem != null)
                        {
                            customersSequence.Add(customersItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.FirstName != null)
            {
                outputObject["FirstName"] = this.FirstName;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.LastName != null)
            {
                outputObject["LastName"] = this.LastName;
            }
            return outputObject;
        }
    }
}
